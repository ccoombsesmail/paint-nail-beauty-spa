// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DEV_POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("DEV_POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Employee {
  id              String    @id @default(uuid())
  userId          String    @unique @map("user_id") @db.VarChar(100)
  email           String    @unique
  firstName       String?   @map("first_name") @db.VarChar(100)
  lastName        String?   @map("last_name") @db.VarChar(100)
  phoneNumber     String?   @unique @map("phone_number") @db.VarChar(100)
  profileImage    String?   @map("profile_image") @db.VarChar(1000)
  isEmailVerified Boolean   @default(false) @map("is_email_verified")
  franchiseCode   String    @map("franchise_code")
  lastSignIn      DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  transactions Transactions[]

  @@map("employees")
}

model Customer {
  id                     String     @id @default(uuid())
  firstName              String     @map("first_name") @db.VarChar(100)
  lastName               String?    @map("last_name") @db.VarChar(100)
  email                  String     @unique @map("email") @db.VarChar(100)
  phoneNumber            String     @unique @map("phone_number") @db.VarChar(50)
  dialCode               String     @map("dial_code") @db.VarChar(10)
  cashbackBalance        Decimal    @default(0) @map("cashback_balance") @db.Decimal()
  membershipLevel        Membership @default(NonMember) @map("membership_level")
  membershipStartDate    DateTime?  @map("membership_start_date")
  createdAtFranchiseCode String     @map("created_at_franchise_code")
  createdAt              DateTime   @default(now()) @map("created_at")
  updatedAt              DateTime   @updatedAt @map("updated_at")

  transactions Transactions[]

  @@map("customers")
}

model Transactions {
  id                     String        @id @default(uuid())
  userEnteredDate        DateTime      @map("user_entered_date")
  serviceType            ServiceType   @map("service_type")
  serviceDuration        Int           @map("service_duration") // in minutes
  totalServicePrice      Decimal       @map("total_service_price") @db.Decimal(10, 2)
  actualPaymentCollected Decimal       @map("actual_payment_collected") @db.Decimal(10, 2)
  tip                    Decimal       @db.Decimal(10, 2)
  paymentMethod          PaymentMethod @map("payment_method")
  technicianEmployeeId   String        @map("technician_employee_id") @db.VarChar(100)
  customerId             String        @map("customer_id") @db.VarChar(100)
  franchiseCode          String        @map("franchise_code")
  createdAt              DateTime      @default(now()) @map("created_at")
  updatedAt              DateTime      @updatedAt @map("updated_at")
  // Relation to User model
  employee               Employee      @relation(fields: [technicianEmployeeId], references: [id])
  customer               Customer      @relation(fields: [customerId], references: [id])

  @@map("transactions")
}

model CountryCode {
  id       Int    @id @default(autoincrement())
  name     String @map("name") @db.VarChar(100)
  dialCode String @map("dial_code") @db.VarChar(10)
  emoji    String @map("emoji") @db.VarChar(10)
  code     String @map("cashback_balance") @db.VarChar(10)

  @@map("country_codes")
}

enum Membership {
  Bronze
  Silver
  Gold
  NonMember
}

enum ServiceType {
  SCM @map("Single Color Manicure")
  SCP @map("Single Color Pedicure")
  MD  @map("Manicure Design")
  PD  @map("Pedicure Design")
  EE  @map("Eyelash Extension")
}

enum PaymentMethod {
  Venmo
  Zelle
  PayPal
  Cash
  CreditCard
}
